apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: eit-web-ar
spec:
  environments:
    - name: development
      build:
        from: master
    - name: production
      build:
        from: release
  components:    
    - name: frontend
      src: frontend
      dockerfileName: dockerfile.frontend
      ports:
       - name: http
         port: 8080
      public: false
      environmentConfig:
        - environment: development
          monitoring: false
          replicas: 1
        - environment: production
          monitoring: false
          replicas: 1

    - name: backend
      src: backend
      dockerfileName: dockerfile.backend
      ports:
        - name: http
          port: 3100
      public: false
      secrets:
        - REDIS_PASSWORD
      environmentConfig:
        - environment: development
          monitoring: false
          replicas: 1
        - environment: production
          monitoring: false
          replicas: 1

    - name: storage
      src: storage
      dockerfileName: dockerfile.storage
      ports:
        - name: redis
          port: 6379
      public: false
      secrets:
        - REDIS_PASSWORD
      environmentConfig:
        - environment: development
          monitoring: false
          replicas: 1
        - environment: production
          monitoring: false
          replicas: 1

    - name: entrypoint
      ingressConfiguration:
        - websocketfriendly
      image: quay.io/pusher/oauth2_proxy:v4.1.0 # see https://pusher.github.io/oauth2_proxy/configuration
      ports:
        - name: http
          port: 8000
      publicPort: http
      secrets:
        - OAUTH2_PROXY_CLIENT_SECRET # Azure client secret for AZ AD app
        - OAUTH2_PROXY_COOKIE_SECRET # Output of: python3 -c 'import os,base64; print(str(base64.urlsafe_b64encode(os.urandom(16)), "utf-8"))'
      environmentConfig:
        - environment: production
          variables:
            OAUTH2_PROXY_CLIENT_ID: "72f7ddbd-9967-40d1-b655-095c60108f3f" # ID of the AZ AD app
            #OAUTH2_PROXY_REDIRECT_URL: "" # Should be "https://<PUBLIC_URL>/oauth2/callback"
            OAUTH2_PROXY_SCOPE: "openid profile offline_access email"
            OAUTH2_PROXY_COOKIE_REFRESH: "60m" # How often should the token be refreshed. Default for azure ad is currently 60m
            OAUTH2_PROXY_EMAIL_DOMAINS: "*" # Any email address registered in AD should be accepted
            OAUTH2_PROXY_HTTP_ADDRESS: "http://:8000" # The port oauth2_proxy listens on
            OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0" # That's the Equinor tenant ID
            OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true" # Pass the access token upstream (to the proxy component)
            OAUTH2_PROXY_PASS_BASIC_AUTH: "false" # Disable unused default
            OAUTH2_PROXY_PASS_USER_HEADERS: "false" # Disable unused default
            OAUTH2_PROXY_PROVIDER: "oidc" # The "azure" provider doesn't seem to work properly
            OAUTH2_PROXY_REDIS_CONNECTION_URL: "redis://auth-state:6379" # Where to store session info (the auth-state component)
            OAUTH2_PROXY_SESSION_STORE_TYPE: "redis" # We're using Redis for storing session info instead of cookies (cookies would get too big)
            OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true" # We don't want a "click to login" page; just issue a redirect
            OAUTH2_PROXY_UPSTREAMS: "http://frontend:8080" # Where authenticated requests are routed to: the web component (nginx)
        - environment: development
          variables:
            OAUTH2_PROXY_CLIENT_ID: "72f7ddbd-9967-40d1-b655-095c60108f3f" # ID of the AD app
            #OAUTH2_PROXY_REDIRECT_URL: "" # Should be "https://<PUBLIC_URL>/oauth2/callback"
            OAUTH2_PROXY_SCOPE: "openid profile offline_access email"
            OAUTH2_PROXY_COOKIE_REFRESH: "60m"
            OAUTH2_PROXY_EMAIL_DOMAINS: "*"
            OAUTH2_PROXY_HTTP_ADDRESS: "http://:8000"
            OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0"
            OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
            OAUTH2_PROXY_PASS_BASIC_AUTH: "false"
            OAUTH2_PROXY_PASS_USER_HEADERS: "false"
            OAUTH2_PROXY_PROVIDER: "oidc"
            OAUTH2_PROXY_REDIS_CONNECTION_URL: "redis://auth-state:6379"
            OAUTH2_PROXY_SESSION_STORE_TYPE: "redis"
            OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
            OAUTH2_PROXY_UPSTREAMS: "http://frontend:8080"

    - name: auth-state
      image: redis:5-alpine
      ports:
        - name: redis
          port: 6379

  dnsAppAlias:
    environment: production
    component: entrypoint